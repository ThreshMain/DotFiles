--- /nix/store/yxdhpdl70g1541lm9mqliy4anm9cl3rz-nixos-rebuild/bin/nixos-rebuild	1970-01-01 01:00:01.000000000 +0100
+++ /home/martin/scripts/nom-rebuild	2022-12-24 01:00:11.871436718 +0100
@@ -255,10 +255,11 @@
     logVerbose "Building in flake mode."
     if [[ -z "$buildHost" && -z "$targetHost" && "$action" != switch && "$action" != boot && "$action" != test && "$action" != dry-activate ]]
     then
-        runCmd nix "${flakeFlags[@]}" build "$@"
+        runCmd nom build "${flakeFlags[@]}" "$@"
         readlink -f ./result
     elif [ -z "$buildHost" ]; then
-        runCmd nix "${flakeFlags[@]}" build "$@" --out-link "${tmpDir}/result"
+
+        runCmd nom build "${flakeFlags[@]}" "$@" --out-link "${tmpDir}/result"
         readlink -f "${tmpDir}/result"
     else
         local attr="$1"
@@ -400,7 +401,7 @@
         export _NIXOS_REBUILD_REEXEC=1
         # Manually call cleanup as the EXIT trap is not triggered when using exec
         cleanup
-        runCmd exec "$p/bin/nixos-rebuild" "${origArgs[@]}"
+        runCmd exec "/home/martin/scripts/nom-rebuild" "${origArgs[@]}"
         exit 1
     fi
 fi
@@ -509,7 +510,7 @@
 # or "boot"), or just build it and create a symlink "result" in the
 # current directory (for "build" and "test").
 if [ -z "$rollback" ]; then
-    log "building the system configuration..."
+    log "building the system configuration... :D"
     if [[ "$action" = switch || "$action" = boot ]]; then
         if [[ -z $flake ]]; then
             pathToConfig="$(nixBuild '<nixpkgs/nixos>' --no-out-link -A system "${extraBuildFlags[@]}")"
